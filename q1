//Question1:

import java.util.*;
import java.io.*;
import java.text.SimpleDateFormat;
public class Main {

	public static void main(String[] args)throws Exception {
		// TODO Auto-generated method stub
		
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		
		System.out.println("Enter Product 1 details:");
		Product p= new Product();
		Product p1= new Product();
	
		String s= br.readLine();
		
		String str[]=s.split(",");
		
		
		p.setName(str[0]);
		p.setProductCode(str[1]);
		p.setBrandName(str[2]);
		p.setStockLeft(Integer.parseInt(str[3]));
		p.setPrice(Double.parseDouble(str[4]));
		SimpleDateFormat fmt2=new SimpleDateFormat("dd-MM-yyyy");
		Date d=fmt2.parse(str[5]);
		p.setExpiryDate(d);
		
		System.out.println("Enter Product 2 details:");
		
		String s1= br.readLine();
		
		String str1[]=s1.split(",");
		
		
		p1.setName(str1[0]);
		p1.setProductCode(str1[1]);
		p1.setBrandName(str1[2]);
		p1.setStockLeft(Integer.parseInt(str1[3]));
		p1.setPrice(Double.parseDouble(str1[4]));
		SimpleDateFormat fmt1=new SimpleDateFormat("dd-MM-yyyy");
		Date d1=fmt1.parse(str1[5]);
		p1.setExpiryDate(d1);
		
		System.out.println();
		System.out.println("Product 1");
		System.out.println();
		System.out.println(p.toString());
		System.out.println();
		System.out.println("Product 2");
		System.out.println();
		System.out.println(p1.toString());
		System.out.println();
		if(p.equals(p1))
		{
			System.out.println("Product 1 is same as Product 2");
			
		}
		else
		{
			System.out.println("Product 1 and Product 2 are different");
		}
		
		
		
		

	}
}
---------------------------------------------------------------------




import java.text.SimpleDateFormat;
import java.util.Date;

public class Product {
	
	
	private String name;
	
	private String productCode;
	
	private String brandName;
	
	private Integer stockLeft;
	
	private Double price;
	
	private java.util.Date expiryDate;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getProductCode() {
		return productCode;
	}

	public void setProductCode(String productCode) {
		this.productCode = productCode;
	}

	public String getBrandName() {
		return brandName;
	}

	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}

	public Integer getStockLeft() {
		return stockLeft;
	}

	public void setStockLeft(Integer stockLeft) {
		this.stockLeft = stockLeft;
	}

	public Double getPrice() {
		return price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	public java.util.Date getExpiryDate() {
		return expiryDate;
	}

	public void setExpiryDate(java.util.Date expiryDate) {
		this.expiryDate = expiryDate;
	}

	public Product(String name, String productCode, String brandName, Integer stockLeft, Double price,
			Date expiryDate) {
		super();
		this.name = name;
		this.productCode = productCode;
		this.brandName = brandName;
		this.stockLeft = stockLeft;
		this.price = price;
		this.expiryDate = expiryDate;
	}

	public Product() {
		super();
	}
	//String strDate = dateFormat.format(date);
SimpleDateFormat fmt=new SimpleDateFormat("dd-MM-yyyy");
	@Override
	public String toString() {
		return "\nName:" + name + "\nProduct Code:" + productCode + "\nBrand Name:" + brandName + "\nStock Left:"
				+ stockLeft + "\nPrice:" + price + "\nExpiry Date:" + fmt.format(expiryDate);
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((productCode == null) ? 0 : productCode.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Product other = (Product) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equalsIgnoreCase(other.name))
			return false;
		if (productCode == null) {
			if (other.productCode != null)
				return false;
		} else if (!productCode.equals(other.productCode))
			return false;
		return true;
	}
	
	
	
	
	

}
